openapi: 3.0.3
info:
  title: JVE Editor Project API
  description: Project and media management operations
  version: 1.0.0

paths:
  /projects:
    post:
      summary: Create new project
      description: Initialize new .jve project file with default structure
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
      responses:
        201:
          description: Project created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'

  /projects/{project_id}:
    get:
      summary: Load project
      description: Open existing .jve project file
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Project loaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
    
    put:
      summary: Save project
      description: Atomic save to .jve file with snapshot
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Project saved successfully

  /projects/{project_id}/sequences:
    post:
      summary: Create sequence
      description: Add new sequence to project
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSequenceRequest'
      responses:
        201:
          description: Sequence created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SequenceResponse'

  /projects/{project_id}/media:
    post:
      summary: Import media
      description: Add media reference to project
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportMediaRequest'
      responses:
        201:
          description: Media imported successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaResponse'

components:
  schemas:
    CreateProjectRequest:
      type: object
      required:
        - name
        - file_path
      properties:
        name:
          type: string
        file_path:
          type: string

    CreateSequenceRequest:
      type: object
      required:
        - name
        - frame_rate
      properties:
        name:
          type: string
        frame_rate:
          type: integer
          minimum: 1
        timecode_start:
          type: integer
          minimum: 0

    ImportMediaRequest:
      type: object
      required:
        - file_path
      properties:
        file_path:
          type: string

    ProjectResponse:
      type: object
      required:
        - id
        - name
        - sequences
        - media
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        created_at:
          type: string
          format: date-time
        sequences:
          type: array
          items:
            $ref: '#/components/schemas/SequenceResponse'
        media:
          type: array
          items:
            $ref: '#/components/schemas/MediaResponse'

    SequenceResponse:
      type: object
      required:
        - id
        - name
        - frame_rate
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        frame_rate:
          type: integer
        duration:
          type: integer
        tracks:
          type: array
          items:
            $ref: '#/components/schemas/TrackResponse'

    TrackResponse:
      type: object
      required:
        - id
        - track_type
        - track_index
      properties:
        id:
          type: string
          format: uuid
        track_type:
          type: string
          enum: [VIDEO, AUDIO]
        track_index:
          type: integer
        enabled:
          type: boolean
        clips:
          type: array
          items:
            $ref: '#/components/schemas/ClipResponse'

    ClipResponse:
      type: object
      required:
        - id
        - start_time
        - duration
      properties:
        id:
          type: string
          format: uuid
        media_id:
          type: string
          format: uuid
        start_time:
          type: integer
        duration:
          type: integer
        source_in:
          type: integer
        source_out:
          type: integer
        enabled:
          type: boolean

    MediaResponse:
      type: object
      required:
        - id
        - file_name
      properties:
        id:
          type: string
          format: uuid
        file_path:
          type: string
        file_name:
          type: string
        duration:
          type: integer
        frame_rate:
          type: integer
        metadata:
          type: object
          additionalProperties: true